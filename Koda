public class NumberToWords {
    public static void main(String[] args) {

//        System.out.println(NumberToWords.getDigitCount(123));
        NumberToWords.numberToWords(25);
    }
    public static void numberToWords(int number) {
        int lastDigit = (reverse(number)) % 10;
        int newNumber = number;
        if (number > 0) {
            while (lastDigit != 0) {
                    switch (lastDigit) {
                        case 0:
                            System.out.println("ZERO");
                        case 1:
                            System.out.println("ONE");
                        case 2:
                            System.out.println("TWO");
                        case 3:
                            System.out.println("THREE");
                        case 4:
                            System.out.println("FOUR");
                        case 5:
                            System.out.println("FIVE");
                        case 6:
                            System.out.println("SIX");
                        case 7:
                            System.out.println("SEVEN");
                        case 8:
                            System.out.println("EIGHT");
                        case 9:
                            System.out.println("NINE");
                    }
                    newNumber = newNumber / 10;
            }
        } else { System.out.println("Invalid Value");
        }
    }

    public static int reverse(int reverseNumber) {
        int lastDigit;
        int reverse = 0;

        while (reverseNumber != 0) {
            lastDigit = reverseNumber % 10;
            reverse = reverse * 10;
            reverse += lastDigit;
            reverseNumber = reverseNumber / 10;
        }
        return reverse;
    }

    public static int getDigitCount(int number) {
        int lastDigit = number % 10;
        int count = 0;
        int newNumber = number;

        if (number >= 0) {
            while (number >= 0) {
                newNumber = newNumber / 10;
                count++;
                if (newNumber <= 0) {
                    return count;
                }
            }
        }
        return -1;
    }
}
